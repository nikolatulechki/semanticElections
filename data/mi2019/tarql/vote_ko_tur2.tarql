base    <https://github.com/nikolatulechki/semanticElections/resource/entity/> 
prefix my: <https://github.com/nikolatulechki/semanticElections/resource/entity/> 
prefix myd: <https://github.com/nikolatulechki/semanticElections/resource/prop/direct/> 
prefix myp: <https://github.com/nikolatulechki/semanticElections/resource/prop/indirect/>
prefix myps: <https://github.com/nikolatulechki/semanticElections/resource/prop/statement/> 
prefix mypq: <https://github.com/nikolatulechki/semanticElections/resource/prop/qualifier/> 
prefix mys: <https://github.com/nikolatulechki/semanticElections/resource/entity/statement/> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

construct {
	?EL_URI
		myd:vote ?PARTY_URI ;
		myp:vote ?S_VOTE_URI ;
	.
	?S_VOTE_URI 
		myps:vote ?PARTY_URI ;
		mypq:valid_votes_recieved ?VV ;
		mypq:invalid_votes_recieved ?IV ;
	.	
}
where {

	bind(if(strlen(?b)=3,concat("0",?b),?b) as ?OB_CODE) # leading zero
	bind(uri(concat("election/mi2019/ko/",?OB_CODE,"/tur2/",?a)) as ?EL_URI)
	bind(STRDT(?c, xsd:integer) as ?CAND_NUM)
	bind(concat("party/",if(?CAND_NUM < 67,?c,concat(?OB_CODE,"/",?c))) as ?PARTY_STR)
	bind(uri(?PARTY_STR) as ?PARTY_URI)
	bind(uri(concat("statement/vote/mi2019/ko/",?OB_CODE,"/tur2/",?a,"/",?PARTY_STR)) as ?S_VOTE_URI)
	bind(STRDT(?d, xsd:integer) as ?VV)
	bind(STRDT(?e, xsd:integer) as ?IV)
}