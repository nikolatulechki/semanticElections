base    <https://github.com/nikolatulechki/semanticElections/resource/entity/>
prefix my: <https://github.com/nikolatulechki/semanticElections/resource/entity/>
prefix myd: <https://github.com/nikolatulechki/semanticElections/resource/prop/direct/>
prefix myp: <https://github.com/nikolatulechki/semanticElections/resource/prop/indirect/>
prefix myps: <https://github.com/nikolatulechki/semanticElections/resource/prop/statement/>
prefix mypq: <https://github.com/nikolatulechki/semanticElections/resource/prop/qualifier/>
prefix mys: <https://github.com/nikolatulechki/semanticElections/resource/entity/statement/>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

construct {
    ?VOTE_URI
        myd:recieved_ballots ?E ;
        myd:voters_count ?F ;
        myd:voters_additional_count ?I ;
        myd:voters_voted_count ?J ;
        myd:votes_valid_count ?T ;
        myd:votes_invalid_count ?R ;
        myd:votes_blanc_count ?U ;
        myd:ballots_empty ?V ;
        myd:linkProtocol ?PROT_LINK ;
        myd:linkScanned ?PDF_LINK ;
    .
} where {
    bind(if(strlen(?c)=3,concat("0",?c),?c) as ?OB_CODE) # leading zero
    bind(uri(concat("election/mi2019/os/",?OB_CODE,"/",?b)) as ?VOTE_URI)
    bind(strdt(?e,xsd:integer) as ?E)
    bind(strdt(?f,xsd:integer) as ?F)
    bind(strdt(?i,xsd:integer) as ?I)
    bind(strdt(?j,xsd:integer) as ?J)
    bind(strdt(?t,xsd:integer) as ?T)
    bind(strdt(?r,xsd:integer) as ?R)
    bind(strdt(?u,xsd:integer) as ?U)
    bind(strdt(?v,xsd:integer) as ?V)
    bind(uri(concat("https://results.cik.bg/mi2019/tur1/protokoli/1/",?OB_CODE,"/",?b,".html")) as ?PROT_LINK)
    bind(uri(concat("https://results.cik.bg/mi2019/tur1/pdf/1/",?OB_CODE,"/",?b,".pdf")) as ?PDF_LINK)
}